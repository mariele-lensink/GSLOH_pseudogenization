

// where m is the mutation rate and n is the fraction of mutations that are neutral
initialize() {
        
        initializeSLiMOptions(nucleotideBased=T); // simulation is nucleotide based 
        defineConstant("L", initializeAncestralNucleotides("/Users/mlensink/Documents/GSLOH_evolution/GSLOH_pseudogenization/corrected_AT2G25450.txt"));
        
        initializeMutationTypeNuc("m1", 0.5, "f", 0);         // neutral
        
        initializeGenomicElementType("g1", m1, 1.0, mmJukesCantor(1e-7));
        initializeGenomicElement(g1, 0,L-1);
        initializeRecombinationRate(0);
}
 
// we create a population of 1000 individuals
1 early() {
        sim.addSubpop("p1", 1135);
        p1.setSelfingRate(0.98);
}


// after 1000 generations we sample the population and save as a vcf
11350 late() {
        g = p1.sampleIndividuals(1135).genomes;
       // muts = sim.mutations;
		  //catn(muts.originTick);
		  //catn(muts.nucleotide); 
		  //catn(muts.position);
		  writeFile(filePath=paste('/Users/mlensink/Documents/GSLOH_evolution/GSLOH_pseudogenization/mutants/gsloh_mutants_',i,'.txt',sep=''),contents= paste("\n>mutant\n" + g.nucleotides()));       
		  //sim.outputFull(filePath="/Users/mlensink/Documents/GSLOH_evolution/GSLOH_pseudogenization/gsloh_mutants_mutationinfo.txt");        
}

//nucleotide
//originTick
//position 

//1000x